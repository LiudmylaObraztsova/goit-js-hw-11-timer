{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","time","days","pad","Math","floor","hours","mins","secs","refs","textContent","value","String","padStart","startTime","Date","now","deltaTime","getTimeComponents","clearInterval","intervalId","start","renderTimer","setInterval","document","querySelector","timer","initTimer"],"mappings":";;;AAiEA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjEA,QAAA,oBAEA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IAYLC,EAAAA,KAAAA,oBAAAA,IACTC,MAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QACnCK,EAAQ,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAC9DM,EAAO,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MACxDO,EAAO,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,MAEnDQ,KAAAA,KAAKP,KAAKQ,eAAiBR,IAC3BO,KAAAA,KAAKH,MAAMI,eAAiBJ,IAC5BG,KAAAA,KAAKF,KAAKG,eAAiBH,IAC3BE,KAAAA,KAAKD,KAAKE,eAAiBF,MAK/BG,EAAAA,KAAAA,MAAAA,GACEC,OAAOD,GAAOE,SAAS,EAAG,MAG3B,EAAA,KAAA,QAAA,KACNJ,KAAKP,KAAKQ,YAAc,KACxBD,KAAKH,MAAMI,YAAc,KACzBD,KAAKF,KAAKG,YAAc,KACxBD,KAAKD,KAAKE,YAAc,OAGZ,EAAA,KAAA,cAAA,KACNI,MAAAA,EAAYC,KAAKC,MACjBC,EAAY,KAAKjB,WAAac,EAC/BI,KAAAA,kBAAkBD,GACnBA,EAAY,IACdE,cAAc,KAAKC,YACdC,KAAAA,WAIG,EAAA,KAAA,YAAA,KACLC,KAAAA,cACAF,KAAAA,WAAaG,YAAY,KACvBD,KAAAA,eACJ,OAlDEvB,KAAAA,SAAWyB,SAASC,cAAc1B,GAClCC,KAAAA,WAAaA,EACToB,KAAAA,WAAa,KACbX,KAAAA,KAAO,CAClBP,KAAMsB,SAASC,cAAc,uBAC7BnB,MAAOkB,SAASC,cAAc,wBAC9BlB,KAAMiB,SAASC,cAAc,uBAC7BjB,KAAMgB,SAASC,cAAc,yBAiD/B,MAAMC,EAAQ,IAAI7B,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIe,KAAK,iBAGvBW,EAAMC","file":"src.928099ae.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n    this.selector = document.querySelector(selector);\n    this.targetDate = targetDate;\n        this.intervalId = null;\n        this.refs = {\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n};\n  }\n\n    getTimeComponents=(time) =>{\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        this.refs.days.textContent = `${days}`;\n        this.refs.hours.textContent = `${hours}`;\n        this.refs.mins.textContent = `${mins}`;\n        this.refs.secs.textContent = `${secs}`;\n\n    };\n\n\n    pad=(value)=> {\n    return String(value).padStart(2, \"0\");\n    };\n\n    start=()=> {\n    refs.days.textContent = \"00\";\n    refs.hours.textContent = \"00\";\n    refs.mins.textContent = \"00\";\n    refs.secs.textContent = \"00\";\n    }\n    \n    renderTimer=()=> {\n    const startTime = Date.now();\n    const deltaTime = this.targetDate - startTime;\n    this.getTimeComponents(deltaTime);\n    if (deltaTime < 0) {\n      clearInterval(this.intervalId);\n      this.start();\n    }\n    }\n    \n    initTimer=()=> {\n    this.renderTimer();\n    this.intervalId = setInterval(() => {\n      this.renderTimer();\n    }, 1000);\n  }\n\n}\n\n\nconst timer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jan 1, 2022\"),\n});\n\ntimer.initTimer();\n"]}